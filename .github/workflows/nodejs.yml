name: FWCloud-API CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - devel
      - multivpn

jobs:
  test:
    if: github.repository_owner == 'soltecsis'
    name: 'FWCloud-API Test'
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        ports:
          - 8888:3306
        env:
          MYSQL_RANDOM_ROOT_PASSWORD: "yes"
          MYSQL_USER: "fwcdbusr"
          MYSQL_PASSWORD: "fwcdbusr"
          MYSQL_DATABASE: "fwcloud"
      mysql8:
        image: mysql:8.0
        ports:
          - 8890:3306
        env:
          MYSQL_RANDOM_ROOT_PASSWORD: "yes"
          MYSQL_USER: "fwcdbusr"
          MYSQL_PASSWORD: "fwcdbusr"
          MYSQL_DATABASE: "fwcloud"
      mariadb:
        image: mariadb:10.1
        ports:
          - 8889:3306
        env:
          MYSQL_RANDOM_ROOT_PASSWORD: "yes"
          MYSQL_USER: "fwcdbusr"
          MYSQL_PASSWORD: "fwcdbusr"
          MYSQL_DATABASE: "fwcloud"

    strategy:
      matrix:
        node-version: ['16', '18', '20']
        database: [mysql, mysql8, mariadb]
        include:
          - database: mysql
            port: 8888
          - database: mysql8
            port: 8890
          - database: mariadb
            port: 8889

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache node modules
      uses: actions/cache@v4
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Disable mysqldump column statistics
      run: echo 'column-statistics=0' | sudo tee -a /etc/mysql/conf.d/mysqldump.cnf
    - name: Install dependencies
      run: npm install
    - name: Run ESLint
      if: matrix.node-version == '18' || matrix.node-version == '20'
      run: npm run lint:check
    - name: Run Prettier
      run: npm run format:check
    - name: Build FWCloud
      run: npm run build --if-present
    - name: Run tests
      run: TYPEORM_PORT=${{ matrix.port }} npm run test -- --forbid-only
      env:
        CI: true